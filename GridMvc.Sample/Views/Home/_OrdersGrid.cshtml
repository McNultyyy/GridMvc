@using GridMvc.Html
@using GridMvc.Sample.Models
@using GridMvc.Sorting
@model GridMvc.Sample.Models.Grids.OrdersGrid
@helper CustomRenderingOfColumn(Order order)
{
    if (order.Customer.IsVip)
    {
    <text>Yes</text>
    }
    else
    {
    <text>No</text>
    }
}

@Html.Grid(Model).Named("ordersGrid").Columns(columns =>
    {
        /* Adding not mapped column, that renders body, using inline Razor html helper */
        columns.Add()
                .Encoded(false)
                .Sanitized(false)
                .SetWidth(30)
                .RenderValueAs(o =>
                    @<b>
                        @Html.ActionLink("Edit", "Edit", new { id = o.OrderID }, new { @class = "modal_link" })
                    </b>);

        /* Adding "OrderID" column: */
        columns.Add(o => o.OrderID)
                .Titled("Number")
                .SetWidth(100);

        /* Adding "OrderDate" column: */
        columns.Add(o => o.OrderDate, "OrderCustomDate")
                .Titled("Date")
                .SortInitialDirection(GridSortDirection.Descending)
                .Format("{0:dd/MM/yyyy}")
                .SetWidth(110);

        /* Adding "CompanyName" column: */
        columns.Add(o => o.Customer.CompanyName)
               .Titled("Company")
               .ThenSortByDescending(o => o.OrderID)
               .SetFilterWidgetType("CustomCompanyNameFilterWidget");
        /* Adding "Vip customer" column: */
        columns.Add(o => o.Customer.IsVip)
                .Titled("Vip customer")
                .SetWidth(150)
                .RenderValueAs(o => CustomRenderingOfColumn(o));

    }).SetLanguage("En").SetRowCssClasses(item => item.Customer.IsVip ? "success" : string.Empty).WithPaging(15).Sortable().Filterable().WithMultipleFilters()

