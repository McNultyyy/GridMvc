@using GridMvc.Html
@using GridMvc.Sample.Models
@using GridMvc.Sorting
@model IEnumerable<Order>
@{
    ViewBag.Title = "Home Page";
}
@helper CustomRenderingOfColumn(Order order)
{
    if (order.Customer.IsVip)
    {
    <text>Yes</text>
    }
    else
    {
    <text>No</text>
    }
}

<h2>Orders administration</h2>
<p>
    This page demonstrates the possibilities of Grid.Mvc. For more documentation, please
    see: <a href="http://gridmvc.codeplex.com/">http://gridmvc.codeplex.com/</a>
</p>

<div id="ordersGrid" style="float: left; position: relative; width: 660px;">

    @Html.Grid(Model, GridRenderOptions.Create("myGrid")).Columns(columns =>
    {
        
        /* Adding not mapped column, that renders body, using inline Razor html helper */
        columns.Add()
                .Encoded(false)
                .Sanitized(false)
                .SetWidth(30)
                .RenderValueAs(d =>
                    @<b>
                        @Html.ActionLink("Edit", "Index")
                    </b>);
        
        /* Adding "OrderID" column: */
        columns.Add(o => o.OrderID, "myid")
                .Titled("Number")
                .SetWidth(100);
        /* Adding "OrderDate" column: */
        columns.Add(o => o.OrderDate)
                .Titled("Date")
                .SortInitialDirection(GridSortDirection.Descending)
                .Format("{0:dd/MM/yyyy}")
                .SetWidth(110);
        /* Adding "CompanyName" column: */
        columns.Add(o => o.Customer.CompanyName)
                .Titled("Company Name")
                .ThenSortByDescending(o => o.OrderID)
                .SetFilterWidgetType("CustomCompanyNameFilterWidget");
        /* Adding "Vip customer" column: */
        columns.Add(o => o.Customer.IsVip)
                .Titled("Vip customer")
                .SetWidth(150)
                .RenderValueAs(o => CustomRenderingOfColumn(o));

    }).SetRowCssClasses(item => item.Customer.IsVip ? "warning" : string.Empty).WithPaging(15, 6).Sortable().Filterable()


</div>

<div id="order-info" style="float: right; width: 270px;">

    <h4>Order details
    </h4>
    <div id="order-content" style="min-height: 500px; padding: 0 5px;">
        <p style="color: #777;">
            Select order to display detailed infomation
        </p>
    </div>

</div>
<script>
    pageGrids.myGrid.addFilterWidget(new CustomersFilterWidget());

    pageGrids.myGrid.onRowSelect(function (row) {
        //alert(row.OrderID);
        $.post("/Home/GetOrder?id=" + row.OrderID, function (data) {
            if (data.Status <= 0) {
                alert(data.Message);
                return;
            }
            $("#order-content").html(data.Content);
        });
        //window.location.href = "/Order/Item/" + row.OrderID;
    });
</script>

