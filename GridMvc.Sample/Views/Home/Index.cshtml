@using GridMvc.Html
@using GridMvc.Sample.Models
@using GridMvc.Sorting
@model IEnumerable<Orders>
@{
    ViewBag.Title = "Home Page";
}
@helper CustomRenderingOfColumn(Orders order)
{
    if (order.Customers.IsVip)
    {
    <text>Yes</text>
    }
    else
    {
    <text>No</text>
    }
}

<h2>Orders administration</h2>
<p>
    This page demonstrates the possibilities of Grid.Mvc. For more documentation, please
    see: <a href="http://gridmvc.codeplex.com/">http://gridmvc.codeplex.com/</a>
</p>

<div id="ordersGrid" style="float: left; position: relative; width: 680px;">

    @Html.Grid(Model).Columns(columns =>
                                      {
                                          columns.Add()
                                              .Encoded(false)
                                              .Sanitized(false)
                                              .RenderValueAs(d => Html.ActionLink("Edit", "Index"));

                                          /* Adding "OrderID" column: */
                                          columns.Add(o => o.OrderID)
                                              .Titled("Number").Width(110);
                                          /* Adding "OrderDate" column: */
                                          columns.Add(o => o.OrderDate).Titled("Date")
                                              .SortInitialDirection(GridSortDirection.Descending)
                                              .Format("{0:dd/MM/yyyy}")
                                              .Width(120);
                                          /* Adding "CompanyName" column: */
                                          columns.Add(o => o.Customers.CompanyName)
                                              .Titled("Company Name")
                                              .Width(220)
                                              .ThenSortByDescending(o => o.OrderID)
                                              .SetFilterWidgetType("CustomCompanyNameFilterWidget");
                                          /* Adding "Vip customer" column: */
                                          columns.Add(o => o.Customers.IsVip).Titled("Vip customer")
                                              .RenderValueAs(o => CustomRenderingOfColumn(o));

                                      }).SetRowCssClasses(item => item.Customers.IsVip ? "success" : string.Empty).WithPaging(20).Sortable().Filterable()


</div>
<div id="order-info" style="float: right; width: 280px;">

    <h4>Order details
    </h4>
    <div id="order-content" style="min-height: 500px; padding: 0 5px;">
        <p style="color: #777;">
            Select order to display detailed infomation
        </p>
    </div>

</div>
<script>
    gridMvcControl.addFilterWidget(new CustomersFilterWidget());

    gridMvcControl.onRowSelect(function (row) {
        //alert(row.OrderID);
        $.post("/Home/GetOrder?id=" + row.OrderID, function (data) {
            if (data.Status <= 0) {
                alert(data.Message);
                return;
            }
            $("#order-content").html(data.Content);
        });
        //window.location.href = "/Order/Item/" + row.OrderID;
    });
</script>

